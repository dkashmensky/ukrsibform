{"version":3,"sources":["Components/ProcessStart/ProcessStart.jsx","Components/CreditForm/CreditForm.jsx","Pages/FormPage.jsx","Components/Header/Header.jsx","Components/Footer/Footer.jsx","App.jsx","serviceWorker.js","index.js","Assets/img/logo.svg"],"names":["ProcessStart","props","onStepFinish","useState","clientCode","setClientCode","errorOpen","setErrorOpen","Alert","elevation","variant","handleErrorClose","ev","reason","StartButton","withStyles","theme","root","color","palette","getContrastText","backgroundColor","marginTop","Button","CodeField","borderBottomColor","borderColor","TextField","className","autoComplete","id","label","value","onChange","code","target","test","length","autoFocus","onClick","fetch","method","headers","body","JSON","stringify","then","res","json","data","started","processId","taskId","catch","err","console","log","Snackbar","open","autoHideDuration","onClose","severity","StyledField","SubmitButton","width","GreenCheckbox","checked","Checkbox","CreditForm","fileUrl","currency","setCurrency","type","setType","sum","setSum","companyTerm","setCompanyTerm","products","setProducts","rate","setRate","term","setTerm","orgName","setOrgName","notBankrupt","setNotBankrupt","noDisputes","setNoDisputes","isCorrect","setIsCorrect","files","setFiles","fieldsErrorOpen","setFieldsErrorOpen","submitOpen","setSubmitOpen","unknownErrorOpen","setUnknownErrorOpen","handleUnknownErrorClose","handleSuccessClose","window","location","reload","removeFromStateArray","tempArray","elemIndex","findIndex","item","fileId","splice","handleFileDelete","a","handleFileAttach","file","FormData","append","Axios","post","getProducts","month","date","Date","getFullYear","getMonth","getDate","getToday","reqDate","useEffect","InputLabelProps","shrink","InputProps","readOnly","required","newName","newTerm","newSum","FormControlLabel","control","labelPlacement","FormControl","InputLabel","Select","labelId","event","notched","MenuItem","creditTerm","interestRate","map","title","accept","htmlFor","component","List","aria-label","ListItem","ListItemIcon","ListItemText","primary","name","link","fileLink","loanRequestData","requestDate","getTime","identificationCode","subjectTitle","creditAmount","creditCurrency","productTitle","subjectLifeTime","subjectIsActive","hasNoLitigationsWithBank","subjectInfoIsCorrect","attachments","valueInfo","objectTypeName","serializationDataFormat","formData","task","variables","createRequestStepResult","status","FormPage","processState","setProcessState","key","Header","src","Logo","alt","Footer","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.750fdb9d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ProcessStart.scss';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst ProcessStart = (props) => {\r\n    const { onStepFinish } = props;\r\n    const processUrl = 'https://demo-credit.herokuapp.com/api/start';\r\n    const [clientCode, setClientCode] = useState('');\r\n    const [errorOpen, setErrorOpen] = useState(false)\r\n\r\n    const Alert = (props) => {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    const handleCodeChange = ev => {\r\n        const code = ev.target.value;\r\n        const regExp = /^[0-9]*$/\r\n        if (regExp.test(code) && code.length < 9) {\r\n            setClientCode(code);\r\n        }\r\n    }\r\n\r\n    const handleErrorClose = (ev, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n      \r\n        setErrorOpen(false);\r\n    }\r\n\r\n    const getProcessData = () => {\r\n        if (!clientCode || clientCode.length < 8) {\r\n            setErrorOpen(true);\r\n            return;\r\n        }\r\n\r\n        fetch(processUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                clientCode,\r\n            }),\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                onStepFinish({\r\n                    started: true,\r\n                    processId: data.processId,\r\n                    taskId: data.taskId,\r\n                    clientCode\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const StartButton = withStyles((theme) => ({\r\n        root: {\r\n            color: theme.palette.getContrastText('#01935d'),\r\n            backgroundColor: '#01935d',\r\n            marginTop: '10px',\r\n            '&:hover': {\r\n                backgroundColor: '#00ab7b',\r\n            }\r\n        }\r\n    }))(Button);\r\n\r\n    const CodeField = withStyles((theme) => ({\r\n        root: {\r\n            '& label.Mui-focused': {\r\n                color: '#01935d',\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                borderBottomColor: '#01935d',\r\n            },\r\n            '& .MuiOutlinedInput-root': {\r\n                '&:hover fieldset': {\r\n                    borderColor: '#01935d',\r\n                },\r\n                '&.Mui-focused fieldset': {\r\n                    borderColor: '#01935d',\r\n                },\r\n            },\r\n        }\r\n    }))(TextField);\r\n\r\n    return (\r\n        <div className=\"wrapper start\">\r\n            <h3 className=\"start__text\">\r\n                Для початку процесу заповнення заявки введіть ЄДРПОУ клієнта і натисніть кнопку\r\n            </h3>\r\n            <form autoComplete=\"off\" className=\"start__form\">\r\n                <CodeField\r\n                    id=\"client-code\"\r\n                    label=\"ЄДРПОУ клієнта\"\r\n                    variant=\"outlined\"\r\n                    value={clientCode}\r\n                    onChange={handleCodeChange}\r\n                    autoFocus\r\n                />\r\n                <StartButton\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={getProcessData}>\r\n                        Розпочати\r\n                </StartButton>\r\n            </form>\r\n            <Snackbar open={errorOpen} autoHideDuration={3000} onClose={handleErrorClose}>\r\n                <Alert onClose={handleErrorClose} severity=\"error\">\r\n                    Введіть будь-ласка валідний код ЄДРПОУ\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default ProcessStart;","import React, { useEffect, useState } from 'react';\r\nimport './CreditForm.scss';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DocIcon from '@material-ui/icons/Description';\r\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Axios from 'axios';\r\n\r\nconst StyledField = withStyles((theme) => ({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: '#01935d',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#01935d',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n                borderColor: '#01935d',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#01935d',\r\n            },\r\n        },\r\n    }\r\n}))(TextField);\r\n\r\nconst SubmitButton = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText('#01935d'),\r\n        backgroundColor: '#01935d',\r\n        marginTop: '20px',\r\n        '&:hover': {\r\n            backgroundColor: '#00ab7b',\r\n        },\r\n        width: '200px'\r\n    }\r\n}))(Button);\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: '#01935d',\r\n      '&$checked': {\r\n        color: '#01935d',\r\n      },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst CreditForm = (props) => {\r\n    const { processId, taskId, clientCode } = props.data;\r\n    const submitUrl = 'https://demo-credit.herokuapp.com/api/submit';\r\n    const productsUrl = 'https://demo-credit.herokuapp.com/api/products';\r\n    const fileUrl = 'https://demo-credit.herokuapp.com/api/file'\r\n    const [currency, setCurrency] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [sum, setSum] = useState();\r\n    const [companyTerm, setCompanyTerm] = useState();\r\n    const [products, setProducts] = useState([]);\r\n    const [rate, setRate] = useState('');\r\n    const [term, setTerm] = useState('');\r\n    const [orgName, setOrgName] = useState('');\r\n    const [notBankrupt, setNotBankrupt] = useState(false);\r\n    const [noDisputes, setNoDisputes] = useState(false);\r\n    const [isCorrect, setIsCorrect] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [fieldsErrorOpen, setFieldsErrorOpen] = useState(false);\r\n    const [submitOpen, setSubmitOpen] = useState(false);\r\n    const [unknownErrorOpen, setUnknownErrorOpen] = useState(false);\r\n\r\n    const validateForm = () => {\r\n        if (currency && type && sum && companyTerm && rate && term && orgName && notBankrupt && noDisputes && isCorrect) {\r\n            return true;\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    const Alert = (props) => {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    const handleErrorClose = (ev, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n      \r\n        setFieldsErrorOpen(false);\r\n    }\r\n\r\n    const handleUnknownErrorClose = (ev, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n      \r\n        setUnknownErrorOpen(false);\r\n    }\r\n\r\n    const handleSuccessClose = (ev, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n      \r\n        setSubmitOpen(false);\r\n        window.location.reload();\r\n    }\r\n\r\n    const handleBankrupt = (ev) => {\r\n        setNotBankrupt(!notBankrupt);\r\n    }\r\n    \r\n    const handleDisputes = (ev) => {\r\n        setNoDisputes(!noDisputes);\r\n    }\r\n\r\n    const handleCorrect = (ev) => {\r\n        setIsCorrect(!isCorrect);\r\n    }\r\n\r\n    const handleCurrencyChange = (event) => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    const handleTypeChange = (event) => {\r\n        setType(event.target.value);\r\n        setTerm(event.target.value.creditTerm);\r\n        setRate(event.target.value.interestRate);\r\n    };\r\n\r\n    const handleSumChange = (ev) => {\r\n        const newSum = ev.target.value;\r\n        if (newSum >= 0) {\r\n            setSum(newSum);\r\n            return;\r\n        }\r\n\r\n        setSum(0);\r\n    }\r\n\r\n    const handleTermChange = (ev) => {\r\n        const newTerm = ev.target.value;\r\n        if (newTerm >= 0) {\r\n            setCompanyTerm(newTerm);\r\n            return;\r\n        }\r\n\r\n        setCompanyTerm(0);\r\n    }\r\n\r\n    const handleNameChange = (ev) => {\r\n        const newName = ev.target.value;\r\n        if (newName) {\r\n            setOrgName(newName);\r\n            return;\r\n        }\r\n\r\n        setOrgName('');\r\n    }\r\n\r\n    const removeFromStateArray = (id) => {\r\n        const tempArray = [...files];\r\n        const elemIndex = tempArray.findIndex(item => item.fileId === id);\r\n        if (elemIndex >= 0) {\r\n            tempArray.splice(elemIndex, 1);\r\n            setFiles(tempArray);\r\n        }\r\n    }\r\n\r\n    const handleFileDelete = async (id) => {\r\n        await fetch(fileUrl, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                fileId: id,\r\n            }),\r\n        })\r\n            .then(data => {\r\n                console.log(data);\r\n                removeFromStateArray(id);\r\n            });\r\n    }\r\n\r\n    const handleFileLink = (link) => {\r\n        window.open(`https://wisconsin.integrity.com.ua/${link}`, '_blank');\r\n    }\r\n\r\n    const handleFileAttach = async (ev) => {\r\n        const file = ev.target.files[0];\r\n        const data = new FormData();\r\n        data.append('file', file);\r\n\r\n        await Axios.post(fileUrl, data).then(res => {\r\n            console.log(res)\r\n            setFiles([...files, res.data.file]);\r\n        })\r\n\r\n        //setFiles([...files, { name: 'ecmDocument.pdf', fileId: 'd4c49b94-95e5-4c70-9a3f-9f9e90130106', fileLink: '/ukrsibbank-demo-credit/api/attachment/d4c49b94-95e5-4c70-9a3f-9f9e90130106' }]);\r\n    }\r\n\r\n    const getProducts = async () => {\r\n        await fetch(productsUrl)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setProducts(data.products);\r\n            });\r\n    }\r\n    \r\n    const getMonth = (month) => {\r\n        if (month > 8) {\r\n            return month + 1;\r\n        }\r\n\r\n        return `0${month + 1}`;\r\n    }\r\n\r\n    const getToday = () => {\r\n        const date = new Date();\r\n        return `${date.getFullYear()}-${getMonth(date.getMonth())}-${date.getDate()}`\r\n    }\r\n\r\n    const [reqDate, setReqDate] = useState(getToday());\r\n\r\n    const getFiles = () => {\r\n        return files.map(item => {\r\n            return {\r\n                title: item.name,\r\n                id: item.fileId,\r\n                link: item.fileLink,\r\n            }\r\n        });\r\n    }\r\n\r\n    const submitForm = () => {\r\n        if (!validateForm()) {\r\n            setFieldsErrorOpen(true)\r\n            return;\r\n        }\r\n\r\n        const loanRequestData = {\r\n            value: {\r\n                requestDate: new Date(reqDate).getTime(),\r\n                identificationCode: clientCode,\r\n                subjectTitle: orgName,\r\n                creditAmount: sum,\r\n                creditCurrency: currency,\r\n                productTitle: type.code,\r\n                subjectLifeTime: companyTerm,\r\n                subjectIsActive: notBankrupt,\r\n                hasNoLitigationsWithBank: noDisputes,\r\n                subjectInfoIsCorrect: isCorrect,\r\n                attachments: getFiles(),\r\n            },\r\n            type: \"Object\",\r\n            valueInfo: {\r\n                objectTypeName: \"ua.com.integrity.bpm.camunda.process.models.CreditRequest\",\r\n                serializationDataFormat: \"application/json\"\r\n            }\r\n        }\r\n\r\n        const formData = {\r\n            task: taskId,\r\n            variables: {\r\n                createRequestStepResult: {\r\n                    value: \"CREATE\"\r\n                },\r\n                loanRequestData,\r\n            }\r\n        }\r\n        console.log(formData)\r\n\r\n        fetch(submitUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(formData),\r\n        })\r\n            .then(res => {\r\n                if (res.status === 204) {\r\n                    setSubmitOpen(true);\r\n                } else {\r\n                    setUnknownErrorOpen(true);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setUnknownErrorOpen(true);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <h3>Заявка на кредит</h3>\r\n            <form className=\"credit-form\">\r\n                <div className=\"credit-form__wrapper\">\r\n                    <div className=\"credit-form__fields\">\r\n                        <StyledField\r\n                            id=\"date\"\r\n                            label=\"Дата подачі заявки\"\r\n                            type=\"date\"\r\n                            variant=\"outlined\"\r\n                            value={reqDate}\r\n                            InputLabelProps={{shrink: true}}\r\n                            InputProps={{readOnly: true}}\r\n                            required\r\n                        />\r\n                        <StyledField\r\n                            id=\"org\"\r\n                            label=\"Назва компанії\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{shrink: true}}\r\n                            autoComplete=\"off\"\r\n                            value={orgName}\r\n                            onChange={handleNameChange}\r\n                            required\r\n                        />\r\n                        <StyledField\r\n                            id=\"org\"\r\n                            label=\"Термін діяльності компанії, міс.\"\r\n                            variant=\"outlined\"\r\n                            type=\"number\"\r\n                            value={companyTerm}\r\n                            onChange={handleTermChange}\r\n                            InputLabelProps={{shrink: true}}\r\n                            autoComplete=\"off\"\r\n                            required\r\n                        />\r\n                        <StyledField\r\n                            id=\"code\"\r\n                            label=\"ЄДРПОУ\"\r\n                            variant=\"outlined\"\r\n                            value={clientCode}\r\n                            InputLabelProps={{shrink: true}}\r\n                            InputProps={{readOnly: true}}\r\n                            required\r\n                        />\r\n                        <StyledField\r\n                            id=\"sum\"\r\n                            label=\"Сума кредита, грн.\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{shrink: true}}\r\n                            type=\"number\"\r\n                            value={sum}\r\n                            onChange={handleSumChange}\r\n                            required\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <div className=\"credit-form__checkboxes\">\r\n                            <FormControlLabel\r\n                                value=\"notBankrupt\"\r\n                                control={<GreenCheckbox onChange={handleBankrupt} checked={notBankrupt} color=\"primary\" />}\r\n                                label=\"Компанія не в стані припинення діяльності (банкрутство)\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"noDisputes\"\r\n                                control={<GreenCheckbox onChange={handleDisputes} checked={noDisputes} color=\"primary\" />}\r\n                                label=\"Відсутні судові спори з банками\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"isCorrect\"\r\n                                control={<GreenCheckbox onChange={handleCorrect} checked={isCorrect} color=\"primary\" />}\r\n                                label=\"Даю згоду на перевірку даних і підтверджую, що дані вказані коректно\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"credit-form__fields\">\r\n                        <FormControl variant=\"outlined\">\r\n                            <InputLabel id=\"currency-label\" shrink>Валюта</InputLabel>\r\n                            <Select\r\n                                labelId=\"currency-label\"\r\n                                id=\"currency\"\r\n                                value={currency}\r\n                                label=\"Валюта\"\r\n                                onChange={handleCurrencyChange}\r\n                                required\r\n                                notched\r\n                            >\r\n                                <MenuItem value=\"UAH\">UAH</MenuItem>\r\n                                <MenuItem value=\"USD\">USD</MenuItem>\r\n                                <MenuItem value=\"EUR\">EUR</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\">\r\n                            <InputLabel id=\"type-label\" shrink>Програма кредитування</InputLabel>\r\n                            <Select\r\n                                labelId=\"type-label\"\r\n                                id=\"type\"\r\n                                value={type}\r\n                                label=\"Програма кредитування\"\r\n                                onChange={handleTypeChange}\r\n                                required\r\n                                notched\r\n                            >\r\n                                {products.map(item => {\r\n                                    return <MenuItem value={item}>{item.title}</MenuItem>\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <StyledField\r\n                            id=\"rate\"\r\n                            label=\"Кредитна ставка, %\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{shrink: true}}\r\n                            InputProps={{readOnly: true}}\r\n                            value={rate}\r\n                            required\r\n                        />\r\n                        <StyledField\r\n                            id=\"term\"\r\n                            label=\"Термін кредитування, міс.\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{shrink: true}}\r\n                            InputProps={{readOnly: true}}\r\n                            value={term}\r\n                            required\r\n                        />\r\n                        <div className=\"credit-form__file\">\r\n                            <input\r\n                                className=\"credit-form__file-input\"\r\n                                accept=\"application/pdf\"\r\n                                type=\"file\"\r\n                                id=\"contained-button-file\"\r\n                                onChange={handleFileAttach}\r\n                            />\r\n                            <label htmlFor=\"contained-button-file\">\r\n                                <SubmitButton variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                Завантажити файл\r\n                                </SubmitButton>\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            \r\n                            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                                {files.map((item) => {\r\n                                    return <ListItem>\r\n                                                <ListItemIcon>\r\n                                                    <DocIcon />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText primary={item.name} onClick={() => handleFileLink(item.fileLink)} />\r\n                                                <DeleteIcon onClick={() => handleFileDelete(item.fileId)} />\r\n                                            </ListItem>\r\n                                })}\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"credit-form__submit\">\r\n                    <SubmitButton\r\n                        onClick={submitForm}\r\n                    >\r\n                        Подати заявку\r\n                    </SubmitButton>\r\n                </div>\r\n            </form>\r\n            <Snackbar open={fieldsErrorOpen} autoHideDuration={3000} onClose={handleErrorClose}>\r\n                <Alert onClose={handleErrorClose} severity=\"error\">\r\n                    Заповніть будь-ласка всі необхідні поля\r\n                </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={unknownErrorOpen} autoHideDuration={3000} onClose={handleUnknownErrorClose}>\r\n                <Alert onClose={handleUnknownErrorClose} severity=\"error\">\r\n                    Помилка сервера, спробуйте знову пізніше\r\n                </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={submitOpen} autoHideDuration={3000} onClose={handleSuccessClose}>\r\n                <Alert onClose={handleSuccessClose} severity=\"success\">\r\n                    Заявка успішно відправлена!\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreditForm;","import React, { useState } from 'react';\r\nimport ProcessStart from '../Components/ProcessStart/ProcessStart';\r\nimport CreditForm from '../Components/CreditForm/CreditForm';\r\n\r\nconst FormPage = () => {\r\n    const [processState, setProcessState] = useState({\r\n        started: false,\r\n        processId: 0,\r\n        taskId: 0,\r\n        clientCode: '',\r\n    });\r\n\r\n    const setProcessData = (data) => {\r\n        setProcessState(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {processState.started ? <CreditForm key=\"credit-form-1\" data={processState} /> : <ProcessStart key=\"start-1\" onStepFinish={setProcessData} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormPage;","import React from 'react';\r\nimport './Header.scss';\r\nimport Logo from '../../Assets/img/logo.svg';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__top\"></div>\r\n            <div className=\"header__bottom\">\r\n                <img className=\"header__logo\" src={ Logo } alt=\"logo\"></img>\r\n                <span className=\"header__text\">Банк для світу, що змінюється</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.scss';\r\nimport Logo from '../../Assets/img/logo.svg';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer__delim\"></div>\r\n            <div className=\"footer__main\">\r\n                <img src={ Logo } alt=\"\" className=\"footer__logo\"/>\r\n                <span className=\"footer__copyright\">\r\n                    © АТ «УКРСИББАНК», 2020\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.scss';\nimport FormPage from './Pages/FormPage';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <FormPage />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.22e7c505.svg\";"],"sourceRoot":""}